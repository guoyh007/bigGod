盒子模型 + 浮动  + 定位 + 弹性盒模型

【水平垂直居中布局】
1.请列出你所知道的使用css让元素上下居中方案；
2.块元素（div）水平垂直居中，文字内容在div中始终水平垂直居中 /
让元素垂直左右居中的方法，越多越好(最好包含flex的方法)；

【盒子模型 margin/padding + 行内块元素的对齐 + 定位 + 弹性盒模型】
水平居中:
1.给父元素添加padding左右
2.给子元素margin: auto;
3.给父元素 text-align:center  子元素: display:inline-block
4.给父元素 position:relative
  给子元素 positon: absolute;left:50%; margin-left:-宽度/2
  给子元素 positon: absolute;left:50%;transform: translateX(-宽度/2 )
5.给父元素 display:flex;justify-content: center

垂直居中
1.给父元素添加padding上下
2.给父元素添加 overflow:hidden;给子元素margin-top;（传递问题）
3.给父元素display: table-cell;vertical-align: middle
4.给父元素 position:relative
  给子元素 positon: absolute;top:50%; margin-top:-高度/2
  给子元素 positon: absolute;top:50%;transform: translateY(-高度/2 )
5.给父元素 display:flex;align-items: center

水平垂直居中
1.给父元素添加内填充padding，但是需要在父元素基础把填充的大小减掉
2.各父元素添加overflow:hidden
  给子元素添加外间距margin:（父元素高度 - 子元素高度）/2    auto
3.给父元素添加 text-align: center;display: table-cell;vertical-align: middle
  给子元素添加 display:inline-block
4.给父元素添加position:relative
  给子元素 position:absloute;top:50%;left:50%;margin:-(高度/2)  0 0 -(宽度/2)  或者 transform: translate(-(高度/2),-(宽度/2))
5.给父元素  position:relative
  给子元素 position: absolute;top:0;bottom:0;left:0;right:0;margin:auto
6.给父元素display: flex;justify-content: center;align-items: center

【多列布局】
正常模型计算公式:
width  =  content-width + padding-left+ padding-right + border-left+border-right
height =  content-height + padding-top+ padding-top + border-top+border-top

IE下模型计算公式
width = content-width
height = content-height

等宽布局: 百分比 +  浮动  +  box-sizing:border-box （padding和border的值已经算进去）


【flex布局之并排等分，单排对齐靠左布局】


【圣杯布局和双飞翼布局】
1.实现页面的三栏布局，左右均为定宽，高度可以自适应；（双飞翼布局 、圣杯布局）

圣杯布局与双飞翼布局针对的都是三列左右栏固定中间栏边框自适应的网页布局（想象一下圣杯是主体是加上两个耳朵；鸟儿是身体加上一对翅膀），圣杯布局是Kevin Cornell在2006年提出的一个布局模型概念，在国内最早是由淘宝UED的工程师（传说是玉伯）改进并传播开来，在中国也有叫法是双飞翼布局，它的布局要求有几点：
三列布局，中间宽度自适应，两边定宽;
中间栏要在浏览器中优先展示渲染;
允许任意列的高度最高;


[圣杯布局]
html代码中  middle部分首先要放在container的最前部分,然后是left,right
1.将三者都 float:left , 再加上一个position:relative (因为相对定位后面会用到）
2.middle部分 width:100%占满
3.此时middle占满了，所以要把left拉到最左边，使用margin-left:-100%
4.这时left拉回来了，但会覆盖middle内容的左端，要把middle内容拉出来，所以在外围container加上 padding:0 220px 0 200px
5.middle内容拉回来了，但left也跟着过来了，所以要还原，就对left使用相对定位 left:-200px  同理，right也要相对定位还原 right:-220px
6.到这里大概就自适应好了。如果想container高度保持一致可以给left middle right都加上min-height:130px
[双飞翼布局]
1.html代码中，main要放最前边，然后是left,right
2.将main，left,right 都float:left
3.将main占满 width:100%
4.此时main占满了，所以要把left拉到最左边，使用margin-left:-100%  同理 right使用margin-left:-220px（这时可以直接继续上边圣杯布局的步骤，也可以有所改动）
5.main内容被覆盖了吧，除了使用外围的padding，还可以考虑使用margin;给main增加一个内层div-- main-inner, 然后margin:0 220px 0 200px


【定位布局】




