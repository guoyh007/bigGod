{
  "_args": [
    [
      {
        "raw": "koa-send@^5.0.0",
        "scope": null,
        "escapedName": "koa-send",
        "name": "koa-send",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "D:\\Node_test\\mi\\20190203\\node_modules\\koa-static"
    ]
  ],
  "_cnpm_publish_time": 1529376157854,
  "_from": "koa-send@^5.0.0",
  "_hasShrinkwrap": false,
  "_id": "koa-send@5.0.0",
  "_location": "/koa-send",
  "_nodeVersion": "10.4.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/koa-send_5.0.0_1529376157487_0.5292432765491271"
  },
  "_npmUser": {
    "name": "coderhaoxin",
    "email": "haoxins@outlook.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "koa-send@^5.0.0",
    "scope": null,
    "escapedName": "koa-send",
    "name": "koa-send",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/koa-static"
  ],
  "_resolved": "http://registry.npm.taobao.org/koa-send/download/koa-send-5.0.0.tgz",
  "_shasum": "5e8441e07ef55737734d7ced25b842e50646e7eb",
  "_shrinkwrap": null,
  "_spec": "koa-send@^5.0.0",
  "_where": "D:\\Node_test\\mi\\20190203\\node_modules\\koa-static",
  "bugs": {
    "url": "https://github.com/koajs/send/issues"
  },
  "dependencies": {
    "debug": "^3.1.0",
    "http-errors": "^1.6.3",
    "mz": "^2.7.0",
    "resolve-path": "^1.4.0"
  },
  "description": "Transfer static files",
  "devDependencies": {
    "eslint": "^4.19.1",
    "eslint-config-standard": "^11.0.0",
    "eslint-plugin-import": "^2.12.0",
    "eslint-plugin-node": "^6.0.1",
    "eslint-plugin-promise": "^3.8.0",
    "eslint-plugin-standard": "^3.1.0",
    "iltorb": "^2.3.2",
    "istanbul": "^0.4.5",
    "koa": "^2.5.1",
    "mocha": "^5.2.0",
    "should": "^13.2.1",
    "supertest": "^3.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "5e8441e07ef55737734d7ced25b842e50646e7eb",
    "size": 4626,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/koa-send/download/koa-send-5.0.0.tgz"
  },
  "engines": {
    "node": ">= 7.6.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "2ce173293d0e8ff02ea42ad844ce797799a4834f",
  "homepage": "https://github.com/koajs/send#readme",
  "keywords": [
    "koa",
    "file",
    "static",
    "sendfile"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "aheckmann",
      "email": "aaron.heckmann+github@gmail.com"
    },
    {
      "name": "coderhaoxin",
      "email": "coderhaoxin@outlook.com"
    },
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "eivifj",
      "email": "eivind.fjeldstad@gmail.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "jonathanong",
      "email": "jonathanrichardong@gmail.com"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    },
    {
      "name": "juliangruber",
      "email": "julian@juliangruber.com"
    },
    {
      "name": "tjholowaychuk",
      "email": "tj@vision-media.ca"
    }
  ],
  "name": "koa-send",
  "optionalDependencies": {},
  "publish_time": 1529376157854,
  "readme": "\n# koa-send\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Dependency Status][david-image]][david-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n Static file serving middleware.\n\n## Installation\n\n```js\n$ npm install koa-send\n```\n\n## Options\n\n - `maxage` Browser cache max-age in milliseconds. (defaults to `0`)\n - `immutable` Tell the browser the resource is immutable and can be cached indefinitely. (defaults to `false`)\n - `hidden` Allow transfer of hidden files. (defaults to `false`)\n - [`root`](#root-path) Root directory to restrict file access.\n - `index` Name of the index file to serve automatically when visiting the root location. (defaults to none)\n - `gzip` Try to serve the gzipped version of a file automatically when `gzip` is supported by a client and if the requested file with `.gz` extension exists. (defaults to `true`).\n - `brotli` Try to serve the brotli version of a file automatically when `brotli` is supported by a client and if the requested file with `.br` extension exists. (defaults to `true`).\n - `format` If not `false` (defaults to `true`), format the path to serve static file servers and not require a trailing slash for directories, so that you can do both `/directory` and `/directory/`.\n - [`setHeaders`](#setheaders) Function to set custom headers on response.\n - `extensions` Try to match extensions from passed array to search for file when no extension is sufficed in URL. First found is served. (defaults to `false`)\n\n### Root path\n\n  Note that `root` is required, defaults to `''` and will be resolved,\n  removing the leading `/` to make the path relative and this\n  path must not contain \"..\", protecting developers from\n  concatenating user input. If you plan on serving files based on\n  user input supply a `root` directory from which to serve from.\n\n  For example to serve files from `./public`:\n\n```js\napp.use(async (ctx) => {\n  await send(ctx, ctx.path, { root: __dirname + '/public' });\n})\n```\n\n  To serve developer specified files:\n\n```js\napp.use(async (ctx) => {\n  await send(ctx, 'path/to/my.js');\n})\n```\n\n### setHeaders\n\nThe function is called as `fn(res, path, stats)`, where the arguments are:\n* `res`: the response object\n* `path`: the resolved file path that is being sent\n* `stats`: the stats object of the file that is being sent.\n\nYou should only use the `setHeaders` option when you wish to edit the `Cache-Control` or `Last-Modified` headers, because doing it before is useless (it's overwritten by `send`), and doing it after is too late because the headers are already sent.\n\nIf you want to edit any other header, simply set them before calling `send`.\n\n## Example\n\n```js\nconst send = require('koa-send');\nconst Koa = require('koa');\nconst app = new Koa();\n\n// $ GET /package.json\n// $ GET /\n\napp.use(async (ctx) => {\n  if ('/' == ctx.path) return ctx.body = 'Try GET /package.json';\n  await send(ctx, ctx.path);\n})\n\napp.listen(3000);\nconsole.log('listening on port 3000');\n```\n\n## License\n\n  MIT\n\n[npm-image]: https://img.shields.io/npm/v/koa-send.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-send\n[github-tag]: http://img.shields.io/github/tag/koajs/send.svg?style=flat-square\n[github-url]: https://github.com/koajs/send/tags\n[travis-image]: https://img.shields.io/travis/koajs/send.svg?style=flat-square\n[travis-url]: https://travis-ci.org/koajs/send\n[coveralls-image]: https://img.shields.io/coveralls/koajs/send.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/koajs/send?branch=master\n[david-image]: http://img.shields.io/david/koajs/send.svg?style=flat-square\n[david-url]: https://david-dm.org/koajs/send\n[license-image]: http://img.shields.io/npm/l/koa-send.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/koa-send.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/koa-send\n[gittip-image]: https://img.shields.io/gittip/jonathanong.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/jonathanong/\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/koajs/send.git"
  },
  "scripts": {
    "lint": "eslint --fix .",
    "test": "mocha --require should --reporter spec --exit",
    "test-cov": "istanbul cover ./node_modules/.bin/_mocha -- --require should --exit",
    "test-travis": "istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- --require should --exit"
  },
  "version": "5.0.0"
}
